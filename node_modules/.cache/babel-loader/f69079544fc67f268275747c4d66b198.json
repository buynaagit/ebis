{"ast":null,"code":"var _jsxFileName = \"/Users/hippo/Workspace/Saasland_React_April_30_2020/Saasland_React/src/Pages/NewsPublish.js\";\nimport React, { useRef } from \"react\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport URL from \"../utils/appConstant\";\nexport default function NewsPublish() {\n  const history = useHistory();\n  const [title, setTitle] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  const Publish = async e => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    console.log(`button Pressed`);\n\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n      setDescription(editorRef.current.getContent());\n    }\n\n    await axios.post(\"http://192.168.0.119:8000/api/blogs/create/\", {\n      title: title,\n      category: category,\n      description: description,\n      token: localStorage.getItemI(\"token\")\n    }, config).then(function (response) {\n      console.log(`response`, response.data);\n      localStorage.setItem(\"token\", response.data.token);\n      history.push(\"/Landing\");\n    }).catch(function (error) {\n      console.log(`error`, error.response);\n    });\n  };\n\n  const editorRef = useRef(null);\n\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Editor, {\n    onInit: (evt, editor) => editorRef.current = editor,\n    initialValue: \"<p>This is the initial content of the editor.</p>\",\n    init: {\n      height: 500,\n      menubar: false,\n      plugins: [\"advlist autolink lists link image charmap print preview anchor\", \"searchreplace visualblocks code fullscreen\", \"insertdatetime media table paste code help wordcount\"],\n      toolbar: \"undo redo | formatselect | \" + \"bold italic backcolor | alignleft aligncenter \" + \"alignright alignjustify | bullist numlist outdent indent | \" + \"removeformat | help\",\n      content_style: \"body { font-family:Helvetica,Arial,sans-serif; font-size:14px }\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: log,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Log editor content\"), React.createElement(\"button\", {\n    onClick: Publish,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"\\u041D\\u0438\\u0439\\u0442\\u043B\\u044D\\u0445\"), React.createElement(\"button\", {\n    onClick: log,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"\\u041A\\u043E\\u0432\\u0435\\u0440 \\u0437\\u0443\\u0440\\u0430\\u0433 \\u043E\\u0440\\u0443\\u0443\\u043B\\u0430\\u0445\"));\n}","map":{"version":3,"sources":["/Users/hippo/Workspace/Saasland_React_April_30_2020/Saasland_React/src/Pages/NewsPublish.js"],"names":["React","useRef","Editor","useHistory","axios","URL","NewsPublish","history","title","setTitle","useState","category","setCategory","description","setDescription","Publish","e","preventDefault","config","headers","console","log","editorRef","current","getContent","post","token","localStorage","getItemI","then","response","data","setItem","push","catch","error","evt","editor","height","menubar","plugins","toolbar","content_style"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport URL from \"../utils/appConstant\";\n\nexport default function NewsPublish() {\n  const history = useHistory();\n  const [title, setTitle] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  const Publish = async (e) => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n    console.log(`button Pressed`);\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n      setDescription(editorRef.current.getContent());\n    }\n    await axios\n      .post(\n        \"http://192.168.0.119:8000/api/blogs/create/\",\n        {\n          title: title,\n          category: category,\n          description: description,\n          token: localStorage.getItemI(\"token\"),\n        },\n        config\n      )\n      .then(function (response) {\n        console.log(`response`, response.data);\n        localStorage.setItem(\"token\", response.data.token);\n        history.push(\"/Landing\");\n      })\n      .catch(function (error) {\n        console.log(`error`, error.response);\n      });\n  };\n\n  const editorRef = useRef(null);\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n  return (\n    <>\n      <Editor\n        onInit={(evt, editor) => (editorRef.current = editor)}\n        initialValue=\"<p>This is the initial content of the editor.</p>\"\n        init={{\n          height: 500,\n          menubar: false,\n          plugins: [\n            \"advlist autolink lists link image charmap print preview anchor\",\n            \"searchreplace visualblocks code fullscreen\",\n            \"insertdatetime media table paste code help wordcount\",\n          ],\n          toolbar:\n            \"undo redo | formatselect | \" +\n            \"bold italic backcolor | alignleft aligncenter \" +\n            \"alignright alignjustify | bullist numlist outdent indent | \" +\n            \"removeformat | help\",\n          content_style:\n            \"body { font-family:Helvetica,Arial,sans-serif; font-size:14px }\",\n        }}\n      />\n      <button onClick={log}>Log editor content</button>\n      <button onClick={Publish}>Нийтлэх</button>\n      <button onClick={log}>Ковер зураг оруулах</button>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}